{"version":3,"sources":["components/navbar.js","config.js","components/exercises-list.component.js","components/edit-exercise.component.js","components/create-exercise.component.js","components/create-user.component.js","App.js","serviceWorker.js","index.js"],"names":["navbar","className","to","Component","dotenv","config","BACKEND_URL","Exercise","props","exercise","username","description","duration","date","substring","_id","href","onClick","deleteExercise","ExercisesList","bind","state","exercises","axios","get","then","response","setState","data","console","log","catch","error","id","delete","res","this","filter","map","currentExercise","key","exerciseList","EditExercise","onChangeUsername","onChangeDescription","onChangeDuration","onChangeDate","onSubmit","Date","users","match","params","user","e","target","value","preventDefault","post","err","window","location","ref","onChange","type","required","selected","CreateExercise","length","CreateUser","newUser","App","path","exact","component","ExerciseList","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.96e65370.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\n\nexport default class navbar extends Component {\n    render() {\n        return (\n           <nav className=\"navbar-dark bg-dark navbar-expand-lg\">\n                <Link to=\"/\" className=\"navbar-brand\">ExerciseTracker</Link>\n                <div className=\"collapse navbar-collapse\">\n                   <ul className=\"navbar-nav mr-auto\">\n                       <li className=\"navbar-item\">\n                           <Link to=\"/\" className=\"nav-link\">Exercises</Link>\n                       </li>\n                       <li className=\"navbar-item\">\n                           <Link to=\"/create\" className=\"nav-link\">Create Exercise Log</Link>\n                       </li>\n                       <li className=\"navbar-item\">\n                           <Link to=\"/user\" className=\"nav-link\">Create User</Link>\n                       </li>\n                   </ul>\n                </div>\n\n           </nav>\n        )\n    }\n}\n","import dotenv from 'dotenv';\ndotenv.config();\n\nexport const BACKEND_URL= process.env.NODE_ENV === 'development'?\"http://localhost:5000\": \"mongodb+srv://Kable:<password>@cluster0.g8oc5.mongodb.net/<dbname>?retryWrites=true&w=majority\"","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport {BACKEND_URL} from '../config'\n// Single Exercise Component\nconst Exercise = (props) => {\n  return (\n    <tr>\n      <td>{props.exercise.username}</td>\n      <td>{props.exercise.description}</td>\n      <td>{props.exercise.duration}</td>\n      <td>{props.exercise.date.substring(0,10)}</td>\n      <td>\n        <Link to={\"/edit/\" + props.exercise._id}>edit</Link>|{\" \"}\n        <a \n        href=\"/\"\n        onClick={() =>{props.deleteExercise(props.exercise._id)}}\n        >\n          delete\n        </a>\n      </td>\n    </tr>\n  )\n}\n// ExerciseList Component\nexport default class ExercisesList extends Component {\n  constructor(props){\n    super(props)\n    this.deleteExercise = this.deleteExercise.bind(this)\n    this.state={\n      exercises: []\n    };\n  }\n  componentDidMount(){\n    axios.get(BACKEND_URL + 'exercises/')\n      .then(response => {\n        this.setState({\n          exercises: response.data\n        })\n        console.log('this is the class project')\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n  deleteExercise(id) {  \n    axios.delete(BACKEND_URL + 'exercises/'+id)  \n    .then(res => console.log(res.data)); \n    this.setState({  \n    exercises: this.state.exercises.filter(exercise => exercise._id !== id)  \n  })  \n}\n  exerciseList(){\n    return this.state.exercises.map((currentExercise) =>{\n      return <Exercise \n        exercise = {currentExercise}\n        deleteExercise ={this.deleteExercise}\n        key={currentExercise._id}\n      />\n    })\n  }\n  render() {\n    return (\n      <div>\n        <h3>Logged Exercises</h3>\n        <table className=\"table\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Username</th>\n              <th>Description</th>\n              <th>Duration</th>\n              <th>Date</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.exerciseList()}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport axios from \"axios\";\nimport {BACKEND_URL} from '../config'\n\nexport default class EditExercise extends Component {\n  constructor(props){\n  super(props)\n  this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDuration = this.onChangeDuration.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      username: \"\",\n      description: \"\",\n      duration: 0,\n      date: new Date(),\n      users: []\n    }\n  }\n\n  componentDidMount() {\n    axios.get(BACKEND_URL + \"exercises/\" + this.props.match.params.id)\n    .then((response) => {\n          this.setState({\n            username: response.data.username,\n            description: response.data.description,\n            duration: response.data.duration,\n            date: new Date(response.data.date)\n          })\n    })\n    .catch((error) => {\n      console.log(error)\n    })\n\n    axios.get(BACKEND_URL + \"users/\")\n    .then((response) => {\n        this.setState({\n          users: response.data.map((user) => \n            user.username\n          )\n        })\n    })\n  }\n\n  // begin form functions (onChange and onSubmit)\n  // end form functions\nonChangeUsername(e){\n  this.setState({\n    username: e.target.value\n  })\n}\n\nonChangeDescription(e){\n  this.setState({\n    description: e.target.value\n  })\n}\nonChangeDuration(e){\n  this.setState({\n    duration: e.target.value\n  })\n}\nonChangeDate(date){\n  this.setState({\n    date: date\n  })\n}\nonSubmit(e){\n  e.preventDefault();\n\n  const exercise = {\n    username : this.state.username,\n    description: this.state.description,\n    duration : this.state.duration,\n    date: this.state.date\n  }\n\n  console.log(exercise)\n\n  axios.post(BACKEND_URL + \"/exercises/update/\"+ this.props.match.params.id, exercise)\n  .then((res) => {console.log(res.data)})\n    .catch((err) => {\n      console.log(err)\n    })\n    \n    window.location = \"/\"\n}\n\n  render() {\n    return (\n      <div>\n        <h3>Edit Exercise Log</h3>\n        <form onSubmit={this.onSubmit}>\n            <div className=\"form-group\">\n              <label> Username: </label>\n              <select \n                ref=\"userInput\"\n                className=\"form-control\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n              >\n                {this.state.users.map((user) =>{\n                  return (\n                    <option key = {user} value={user}>\n                      {user}\n                    </option>\n                  )\n                })}\n\n              </select>\n            </div>\n                    <div className=\"form-group\">\n                        <label>Description</label>\n                            <input\n                             type=\"text\"\n                             required\n                            className=\"form-control\"\n                            value={this.state.description}\n                            onChange={this.onChangeDescription}\n                             />\n                         </div>\n                         <div className=\"form-group\">\n                           <label>Duration(in minutes)</label>\n                           <input \n                           type=\"text\"\n                           className=\"form-control\"\n                           required\n                           value={this.state.duration}\n                           onChange={this.onChangeDuration}\n                           />\n                         </div>\n                              <div className=\"form-group\">\n                                  <label>Date: </label>\n                                  <DatePicker\n                                      selected={this.state.date}\n                                      onChange={this.onChangeDate}\n                                  />\n\n                                </div>        \n                                <div className=\"form-group\">\n                                          <input type=\"submit\"\n                                          value=\"edit Exercise Log\"\n                                          className=\"btn btn-primary\"\n\n                                          />\n                                  </div>                \n                              </form>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport 'react-datepicker/dist/react-datepicker.css'\nimport DatePicker from \"react-datepicker\"\nimport axios from \"axios\"\nimport {BACKEND_URL} from '../config'\n\nexport default class CreateExercise extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeUsername = this.onChangeUsername.bind(this);  \n    this.onChangeDescription = this.onChangeDescription.bind(this);  \n    this.onChangeDuration = this.onChangeDuration.bind(this);  \n    this.onChangeDate = this.onChangeDate.bind(this);  \n    this.onSubmit = this.onSubmit.bind(this);\n    this.state ={\n      username: \"\",\n      description: '',\n      duration: 0,\n      date: new Date(),\n      users: []\n    }\n  }\n  componentDidMount(){\n    // axios.get fires the get request associated with the URL you pass in as an argument\n    axios.get(BACKEND_URL + 'users/')\n    .then((res) => {\n      if(res.data.length > 0){\n        this.setState(\n          {\n            users: res.data.map(user => user.username),\n            username: res.data[0].username\n          }\n        )\n      }\n    })\n      .catch((err) =>{\n        console.log(err)\n      })\n    \n  }\n  onChangeUsername(e){\n    this.setState({\n      username: e.target.value\n    })\n  }\n  onChangeDescription(e){\n    this.setState({\n      description: e.target.value\n    })\n  }\n  onChangeDuration(e){\n    this.setState(\n      {duration: e.target.value}\n    )\n  }\n  onChangeDate(date){\n    this.setState(\n      {date: date}\n    )\n  }\n  onSubmit(e){\n    e.preventDefault();\n    const exercise ={\n      username: this.state.username  ,\n      description: this.state.description,\n      duration: this.state.duration ,\n      date: this.state.date\n    }\n\n    console.log(exercise);\n\n    axios.post(BACKEND_URL + 'exercises/add', exercise)\n    .then((res) => {console.log(res.data)})\n    window.location = '/'\n  }\n  render() {\n    return (\n      <div>\n        <h3>Create New Exercise Log</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>Username: </label>\n            <select \n              ref=\"userInput\"\n              required\n              className = \"form-control\"\n              value={this.state.username}\n              onChange={this.onChangeUsername}\n            >\n              {\n                this.state.users.map((user) => {\n                  return <option\n                    key={user}\n                    value = {user}\n                  >\n                    {user}\n                  </option>\n                })\n              }\n            </select>\n          </div>\n          <div className=\"form-group\">\n              <label>Description</label>\n                <input \n                  type=\"text\"\n                  required\n                  className='form-control'\n                  value={this.state.description}\n                  onChange={this.onChangeDescription}\n                />\n          </div>\n          <div className=\"form-group\">\n              <label> Duration(in minutes) </label>\n                <input\n                type=\"text\"\n                className=\"form-control\"\n                    value={this.state.duration}\n                    onChange={this.onChangeDuration}\n                    />\n          </div>\n          <div className=\"form-group\">\n            <label>Date:</label>\n              <div>\n                <DatePicker \n                selected = {this.state.date}\n                onChange={this.onChangeDate}\n                />\n              </div>\n          </div>\n          <div className=\"form-group\">\n            <input type=\"submit\" value=\"Create Excercise Log\" className=\"btn-btn-primary\"/>                        \n          </div>\n        </form>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport axios from 'axios'\nimport {BACKEND_URL} from '../config'\n\n\nexport default class CreateUser extends Component {\n  constructor(props){\n    super(props)\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      username: \"\"\n    }\n  }\n  onChangeUsername(e){\n    this.setState({\n      username: e.target.value\n    })\n  }\n  onSubmit(e){\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username\n    }\n    console.log(newUser);\n    // axios.post takes two arguments\n    // first: the url to post to as a string\n    // Second: what we are posting\n    axios.post(BACKEND_URL + 'users/add' , newUser)\n    .then((res) => {\n        console.log(res.data)\n    });\n    this.setState({\n      username: ''\n    })\n  }\n  render() {\n    return (\n      <div>\n       <h3>Create New User</h3>\n       <form onSubmit={this.onSubmit}>\n         <div className=\"form-group\">\n          <label>Username: </label>\n            <input \n            required\n            type=\"text\"\n            className='form-control'\n            value={this.state.username}\n            onChange={this.onChangeUsername}\n            />\n          </div>  \n          <div className=\"form-group\">\n            <input type=\"submit\" value=\"create user\" className=\"btn btn-primary\"/>\n          </div>\n       </form>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Navbar from \"./components/navbar\"\nimport ExerciseList from \"./components/exercises-list.component\"\nimport EditExercise from \"./components/edit-exercise.component\"\nimport CreateExercise from \"./components/create-exercise.component\"\nimport CreateUser from \"./components/create-user.component\"\n\nfunction App() {\n  return (\n    <Router>\n         <div className=\"container\">\n         <Navbar />\n              <br /> \n              <Route path=\"/\" exact component ={ExerciseList}/> \n              <Route path=\"/edit/:id\" component={EditExercise} /> \n              <Route path=\"/create\" component={CreateExercise} /> \n              <Route path=\"/user\" component={CreateUser}/> \n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}